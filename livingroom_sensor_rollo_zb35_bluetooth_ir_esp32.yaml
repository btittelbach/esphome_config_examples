## Simple ESP32 with three sensor connected via I2C
## Sensors:
## - BH1750 illuminance
## - HTU21D temperature + humidity
## - BMP180 temperature + pressure
##
## Also:
## Control a GW60 blinds motor / rollandenmotor using a ZB35 remote hacked with an esp8266
## see https://realraum.at/wiki/doku.php?id=xro:rollohack_gw60
##
## the remote's buttons remain useable, by using the custom MyTriStateOutput class
##
## Also:
## - acts as BLE proxy
## - controls A/C via IR
#===============================================================================

#===============================================================================
substitutions:
  device_name: livingroomsensorzb35
  room_friendly_name: Living Room
#===============================================================================

esphome:
  name: ${device_name}
  on_boot:
   - script.execute: rollo_set_gpio_to_input
   - script.wait: rollo_set_gpio_to_input
  platformio_options:
    board_build.flash_mode: dio


esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_BT_BLE_42_FEATURES_SUPPORTED: y
      CONFIG_BT_BLE_50_FEATURES_SUPPORTED: y


external_components:
  - source:
      type: git
      url: https://github.com/btittelbach/esphome_gpio_tristate
      ref: main
      # type: local
      # path: /home/bernhard/source/esphome_gpio_tristate/esphome/components/
    components: [ "gpio_tristate" ]


wifi:
  ssid: !secret iotwifi_name
  password: !secret iotwifi_pass

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name}"
    password: !secret fallbackwifi2_pass

logger:

api:
  encryption:
    key: !secret api_encryption_psk

ota:
  - platform: esphome
    password: !secret ota_password

#mqtt:
#    broker: !secret mqttpesta_broker
#    username: !secret mqttpesta_username
#    password: !secret mqttpesta_password
#    discovery: false

#web_server:
#  port: 80

#######################################
### AC Infrared Remote
#######################################
# GPIO18-GPIO19


# remote_receiver:
#   id: rcvr
#   pin:
#     number: GPIO19
#     # inverted: true
#     # mode:
#     #   input: true
#     #   pullup: true
#   # high 55% tolerance is recommended for some remote control units
#   tolerance: 55%

remote_transmitter:
  pin: GPIO18
  carrier_duty_percent: 50%
  id: irtx

climate:
  - platform: midea_ir
    name: "AirConIR"
    # sensor: room_temperature
    use_fahrenheit: false
    # receiver_id: rcvr
    transmitter_id: irtx
    supports_heat: false
    supports_cool: true
  # - platform: heatpumpir
  #   name: "AC2"
  #   protocol: midea
  #   horizontal_default: auto
  #   vertical_default: auto
  #   max_temperature: 26.0
  #   min_temperature: 17.0
  #   transmitter_id: irtx



#######################################
### Bluetooth Proxy
#######################################
## works much better with LAN


# esp32_ble_tracker:
#   scan_parameters:
#     #  only use these values on Ethernet not WIFI
#     # interval: 1100ms
#     # window: 1100ms
#     active: true
#
# bluetooth_proxy:
#   active: true
#

#######################################
### Sensor Configuration
#######################################
# GPIO8-GPIO9


## i2c configuration
i2c:
  sda: 8
  scl: 9
  scan: False

## sensor configuration
sensor:
  - platform: bh1750
    name: "${room_friendly_name} Illuminance BH1750"
    update_interval: 10s
  - platform: htu21d
    temperature:
      name: "${room_friendly_name} Temperature HTU21D"
    humidity:
      name: "${room_friendly_name} Humidity HTU21D"
    update_interval: 60s
  - platform: bmp085
    temperature:
      name: "${room_friendly_name} Temperature BMP180"
    pressure:
      name: "${room_friendly_name} Pressure BMP180"
    update_interval: 60s


#######################################
### ZB35 Rollo Control
#######################################
# GPIO04-GPIO07

output:
  - platform: gpio_tristate
    pin:
      number: 4
      mode: input
    id: gpio_zb35_b0

  - platform: gpio_tristate
    pin:
      number: 5
      mode: input
    id: gpio_zb35_b1

  - platform: gpio_tristate
    pin:
      number: 6
      mode: input
    id: gpio_zb35_b2

  - platform: gpio_tristate
    pin:
      number: 7
      mode: input
    id: gpio_zb35_b3


script:
  - id: rollo_set_gpio_to_input
    mode: single
    then:
      - output.set_level:
          id: gpio_zb35_b0
          level: 50%
      - output.set_level:
          id: gpio_zb35_b1
          level: 50%
      - output.set_level:
          id: gpio_zb35_b2
          level: 50%
      - output.set_level:
          id: gpio_zb35_b3
          level: 50%
  - id: rollo_up
    mode: single
    then:
      - output.set_level:
          id: gpio_zb35_b0
          level: 100%
      - output.set_level:
          id: gpio_zb35_b1
          level: 0%
      - delay: 1500ms
  - id: rollo_down
    mode: single
    then:
      - output.set_level:
          id: gpio_zb35_b0
          level: 0%
      - output.set_level:
          id: gpio_zb35_b1
          level: 100%
      - delay: 1500ms
  - id: rollo_stop
    mode: single
    then:
      - output.set_level:
          id: gpio_zb35_b0
          level: 100%
      - output.set_level:
          id: gpio_zb35_b1
          level: 100%
      - delay: 1500ms
  - id: rollo_select_0
    mode: single
    then:
      - output.set_level:
          id: gpio_zb35_b2
          level: 0%
      - output.set_level:
          id: gpio_zb35_b3
          level: 0%
  - id: rollo_select_1
    mode: single
    then:
      - output.set_level:
          id: gpio_zb35_b2
          level: 100%
      - output.set_level:
          id: gpio_zb35_b3
          level: 0%
  - id: rollo_select_2
    mode: single
    then:
      - output.set_level:
          id: gpio_zb35_b2
          level: 0%
      - output.set_level:
          id: gpio_zb35_b3
          level: 100%
  - id: rollo_select_3
    mode: single
    then:
      - output.set_level:
          id: gpio_zb35_b2
          level: 100%
      - output.set_level:
          id: gpio_zb35_b3
          level: 100%

cover:
  - platform: template
    optimistic: true
    assumed_state: true
    has_position: false
    device_class: shutter
    id: rollo_all
    name: zb35_rollo_all
    open_action:
      - script.execute: rollo_select_0
      - script.wait: rollo_select_0
      - script.execute: rollo_up
      - script.wait: rollo_up
      - script.execute: rollo_set_gpio_to_input
      - script.wait: rollo_set_gpio_to_input
    close_action:
      - script.execute: rollo_select_0
      - script.wait: rollo_select_0
      - script.execute: rollo_down
      - script.wait: rollo_down
      - script.execute: rollo_set_gpio_to_input
      - script.wait: rollo_set_gpio_to_input
    stop_action:
      - script.execute: rollo_select_0
      - script.wait: rollo_select_0
      - script.execute: rollo_stop
      - script.wait: rollo_stop
      - script.execute: rollo_set_gpio_to_input
      - script.wait: rollo_set_gpio_to_input

  - platform: template
    optimistic: true
    assumed_state: true
    has_position: false
    device_class: shutter
    id: rollo1
    name: zb35_rollo_1
    open_action:
      - script.execute: rollo_select_1
      - script.wait: rollo_select_1
      - script.execute: rollo_up
      - script.wait: rollo_up
      - script.execute: rollo_set_gpio_to_input
      - script.wait: rollo_set_gpio_to_input
    close_action:
      - script.execute: rollo_select_1
      - script.wait: rollo_select_1
      - script.execute: rollo_down
      - script.wait: rollo_down
      - script.execute: rollo_set_gpio_to_input
      - script.wait: rollo_set_gpio_to_input
    stop_action:
      - script.execute: rollo_select_1
      - script.wait: rollo_select_1
      - script.execute: rollo_stop
      - script.wait: rollo_stop
      - script.execute: rollo_set_gpio_to_input
      - script.wait: rollo_set_gpio_to_input

  - platform: template
    optimistic: true
    assumed_state: true
    has_position: false
    device_class: shutter
    id: rollo2
    name: zb35_rollo_2
    open_action:
      - script.execute: rollo_select_2
      - script.wait: rollo_select_2
      - script.execute: rollo_up
      - script.wait: rollo_up
      - script.execute: rollo_set_gpio_to_input
      - script.wait: rollo_set_gpio_to_input
    close_action:
      - script.execute: rollo_select_2
      - script.wait: rollo_select_2
      - script.execute: rollo_down
      - script.wait: rollo_down
      - script.execute: rollo_set_gpio_to_input
      - script.wait: rollo_set_gpio_to_input
    stop_action:
      - script.execute: rollo_select_2
      - script.wait: rollo_select_2
      - script.execute: rollo_stop
      - script.wait: rollo_stop
      - script.execute: rollo_set_gpio_to_input
      - script.wait: rollo_set_gpio_to_input

  - platform: template
    optimistic: true
    assumed_state: true
    has_position: false
    device_class: shutter
    id: rollo3
    name: zb35_rollo_3
    open_action:
      - script.execute: rollo_select_3
      - script.wait: rollo_select_3
      - script.execute: rollo_up
      - script.wait: rollo_up
      - script.execute: rollo_set_gpio_to_input
      - script.wait: rollo_set_gpio_to_input
    close_action:
      - script.execute: rollo_select_3
      - script.wait: rollo_select_3
      - script.execute: rollo_down
      - script.wait: rollo_down
      - script.execute: rollo_set_gpio_to_input
      - script.wait: rollo_set_gpio_to_input
    stop_action:
      - script.execute: rollo_select_3
      - script.wait: rollo_select_3
      - script.execute: rollo_stop
      - script.wait: rollo_stop
      - script.execute: rollo_set_gpio_to_input
      - script.wait: rollo_set_gpio_to_input


light:
  - platform: esp32_rmt_led_strip
    id: led_light
    name: "${room_friendly_name} Notification Pixel"
    pin: 48
    num_leds: 2
    rgb_order: GRB
    chipset: ws2812
    effects:
      - addressable_rainbow:
      - addressable_rainbow:
          name: Rainbow Effect With Custom Values
          speed: 10
          width: 50
      - addressable_color_wipe:


########## ZB35 Output Debugging ########## 
# number:
#   - platform: template
#     name: "gpio_zb35_b0"
#     step: 0.5
#     min_value: 0
#     max_value: 1
#     initial_value: 0.5
#     mode: slider
#     optimistic: true
#     on_value:
#       then:
#       - output.set_level:
#           id: gpio_zb35_b0
#           level: !lambda "return x;"        
#   - platform: template
#     name: "gpio_zb35_b1"
#     step: 0.5
#     min_value: 0
#     max_value: 1
#     initial_value: 0.5
#     mode: slider
#     optimistic: true
#     on_value:
#       then:
#       - output.set_level:
#           id: gpio_zb35_b1
#           level: !lambda "return x;"        
#   - platform: template
#     name: "gpio_zb35_b2"
#     step: 0.5
#     min_value: 0
#     max_value: 1
#     initial_value: 0.5
#     mode: slider
#     optimistic: true
#     on_value:
#       then:
#       - output.set_level:
#           id: gpio_zb35_b2
#           level: !lambda "return x;"        
#   - platform: template
#     name: "gpio_zb35_b3"
#     step: 0.5
#     min_value: 0
#     max_value: 1
#     initial_value: 0.5
#     mode: slider
#     optimistic: true
#     on_value:
#       then:
#       - output.set_level:
#           id: gpio_zb35_b3
#           level: !lambda "return x;"        
