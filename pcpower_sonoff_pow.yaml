## Sonoff Pow
## which monitors a PCs power for
## - statistics
## - in order for PC to act as master-power to switch other devices via homeassistant
## - to visualize power useage via it's LED
#===============================================================================
substitutions:
  device_name: pcpower
  device_friendly_name: PCPower
#===============================================================================

esphome:
  name: pcpower
  platform: ESP8266
  board: esp01_1m
  board_flash_mode: dout
#  on_boot:
#  - switch.turn_on: relay

wifi:
  power_save_mode: HIGH
  ssid: !secret iotwifi_name
  password: !secret iotwifi_pass

# Enable logging
logger:
  baud_rate: 0

api:
  encryption:
    key: !secret api_encryption_psk
  reboot_timeout: 0s


ota:
  password: !secret ota_password

#mqtt:
#    broker: !secret mqttpesta_broker
#    username: !secret mqttpesta_username
#    password: !secret mqttpesta_password
#    discovery: false

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: "${device_friendly_name} Button"
    on_press:
      - switch.toggle: relay

switch:
  - platform: gpio
    pin: GPIO12
    id: relay
    icon: mdi:desktop-classic
    restore_mode: RESTORE_DEFAULT_OFF
    name: "${device_friendly_name}"

output:
  - platform: esp8266_pwm
    id: pow_blue_led
    pin:
      number: GPIO15
      inverted: false

light:
  - platform: monochromatic
    name: ${device_friendly_name} Blue LED
    output: pow_blue_led
    id: blue_led

uart:
  rx_pin: RX
  baud_rate: 4800

sensor:
  - platform: hlw8012
    sel_pin: 5
    cf_pin: 14
    cf1_pin: 13
    voltage_divider: 2515
    update_interval: 20s
    current:
      name: ${device_friendly_name} Current
      icon: mdi:current-ac
    voltage:
      name: ${device_friendly_name} Voltage
      icon: mdi:flash
    power:
      name: ${device_friendly_name} Power
      id: ${device_name}_wattage
      icon: mdi:gauge
      on_value:
        if:
          condition:
            sensor.in_range:
              id: ${device_name}_wattage
              above: 4.0
          then:
            - light.turn_on:
                id: blue_led
                brightness: !lambda |-
                  return 0.2+0.8*min(id(${device_name}_wattage).state*0.8/2000.0,0.8);
          else:
            - light.turn_off: blue_led
  - platform: total_daily_energy
    name: ${device_friendly_name} Total Daily Energy
    power_id: ${device_name}_wattage
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    icon: mdi:chart-bar
  - platform: wifi_signal
    name: "${device_friendly_name} WiFi Signal"
    update_interval: 60s
    filters:
      - sliding_window_moving_average:
          window_size: 15
          send_every: 15
          send_first_at: 1
    icon: mdi:wifi

time:
  - platform: homeassistant
    id: homeassistant_time

web_server:
  port: 80
